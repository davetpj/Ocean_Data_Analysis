# load necessary modules# import time# from mpl_toolkits.basemap import Basemap# import matplotlib.pyplot as plt# from metpy import calc# from scipy import stats# from cdo import Cdo# 하나 부르기 # print(nc.Dataset('/Users/mizuki/gh/Ocean_Data_Analysis/EVAPintp/EVAP.201801.nc'))import numpy as npimport netCDF4 as ncimport matplotlib.pyplot as pltimport mathdata1 = nc.Dataset('/Users/mizuki/gh/Ocean_Data_Analysis/EVAPintp/EVAP.201801.nc')lat = data1.variables['lat'][:]lon = data1.variables['lon'][:]time = data1.variables['time'][:]EVAPdir = '/Users/mizuki/gh/Ocean_Data_Analysis/EVAPintp/'  # directorystyear = 1979  # start yearedyear = 2019  # end year#evap_year = np.zeros([(edyear-styear+1),len(lat),len(lon)])evap_year = np.zeros([(edyear-styear+1),37,72])nday_list1 = np.array([31,28,31,30,31,3031,31,30,31,30,31])nday_list2 = np.array([31,29,31,30,31,3031,31,30,31,30,31])for i in range(styear, edyear+1):    if i%4 != 0:        nday = nday_list1[:]    else:        nday = nday_list2[:]            for j in range(1,13):        year = str(i)        month = str(j).zfill(2)                filename = f"{EVAPdir}EVAP.{year}{month}.nc"        data = nc.Dataset(filename)        evap_month = data.variables['e'][:,:]                evap_year[i-styear,:,:] += evap_month[0,:,:]*nday[j-1]         cosarray=np.zeros((len(lat),len(lon))) for x in range(0, len(lon)):	cosarray[:,x]=np.cos(??)wgt_evap_year0 = np.zeros(evap_year.shape)for t in range(??):    wgt_evap_year0[??] = evap_year[??]*cosarray    np.sum plt.plot(range(styear,edyear+1), avg_evap_year)            